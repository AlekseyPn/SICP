;; exercise 1
(module exercise racket
    ;; 1.1
    10
    (+ 5 3 4)
    (- 9 1)
    (/ 6 2)
    (+ (* 2 4) (- 4 6))
    (define a 3)
    (define b (+ a 1))
    (+ a b (* a b))
    (= a b)
    (if (and (> b a) (<  b (* a b)))
        b
        a)
    (cond ((= a 4) 6)
          ((= b 4)(+ 6 7 a))
          (else 25))
    (+ 2 (if (> b a) b a))
    (* (cond ((> a b) a)
             ((< a b) b)
             (else -1))
       (+ a 1)
       )

    ;; 1.2
    (/ (+ 5 4 (- 2 (- 3 (+ 6 (/ 4 5))))) (* 3 (- 6 2) (- 2 7)))
    ;; 1.3 define procedure with three arguments
    ;; and return sum of squared two biggest of them
    (define (sum-of-biggest-sqrt a b c) (
                                         (cond ((and (> a b)(> b c)) (+ (sqrt a) (sqrt b)))
                                               ((and (> c b)(> b a)) (+ (sqrt c) (sqrt b)))
                                               (else (+ (sqrt a) (sqrt b)))
                                         )
      )
    )
    )
